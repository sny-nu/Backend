image: docker:latest

stages:
  - build
  - deploy

build_develop:
  stage: build
  before_script:
    - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" $CI_REGISTRY
  script:
    - echo "$DB_HOST"
    - cat "$WEB_RISK_TOKEN" > webRisktToken.json
    - docker build --no-cache --build-arg DB_HOST="$DB_HOST" --build-arg DB_USER="$TEST_DB_USER" 
      --build-arg DB_PASS="$TEST_DB_PASSWORD" --build-arg DB_NAME="$TEST_DB_NAME" --build-arg WEB_RISK_TOKEN=webRisktToken.json
      -t $CI_REGISTRY/snynu/backend/test:${CI_COMMIT_SHA} -t $CI_REGISTRY/snynu/backend/test:latest .
    - docker push $CI_REGISTRY/snynu/backend/test:${CI_COMMIT_SHA}
    - docker push $CI_REGISTRY/snynu/backend/test:latest
    - echo "built image $CI_REGISTRY/snynu/backend/test:${CI_COMMIT_SHA}"
  only:
    - develop
    - ci-cd

# build-staging:
#   stage: build
#   before_script:
#     - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --no-cache -t $CI_REGISTRY/snynu/backend:${CI_COMMIT_SHA} -t $CI_REGISTRY/snynu/backend:latest .
#     - docker push $CI_REGISTRY/snynu/backend:${CI_COMMIT_SHA}
#     - docker push $CI_REGISTRY/snynu/backend:latest
#     - echo "built image $CI_REGISTRY/snynu/backend:${CI_COMMIT_SHA}"
#   only:
#     - master
    
deploy_develop:
  stage: deploy
  before_script:
    - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" $CI_REGISTRY
  script:
    - echo "deploy image $CI_REGISTRY/snynu/backend/test:${CI_COMMIT_SHA}"
    - docker service update --image $CI_REGISTRY/snynu/backend/test:${CI_COMMIT_SHA} snynu_backend-test
  only:
    - develop
    - ci-cd

# deploy_staging:
#   stage: deploy
#   before_script:
#     - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" $CI_REGISTRY
#   script:
#     - echo "deploy image $CI_REGISTRY/snynu/backend:${CI_COMMIT_SHA}"
#     - docker service update --image $CI_REGISTRY/snynu/backend:${CI_COMMIT_SHA} snynu_backend
#   only:
#     - master
